from fastapi import FastAPI, Requestfrom fastapi.responses import HTMLResponsefrom fastapi.staticfiles import StaticFilesfrom fastapi.templating import Jinja2Templatesfrom fastapi.middleware.cors import CORSMiddlewarefrom src.moto.router import router as moto_routerfrom src.task.router import router as task_routerfrom src.user.router import router as auth_routerfrom src.order.router import router as order_routerapp = FastAPI(    title="BuyMoto",)app.add_middleware(    CORSMiddleware,    allow_origins=["*"],  # Разрешить все источники, можно заменить на конкретный домен    allow_credentials=True,    allow_methods=["*"],  # Разрешить все методы (GET, POST и т.д.)    allow_headers=["*"],  # Разрешить любые заголовки)# Подключение статических файловapp.mount("/static", StaticFiles(directory="static"), name="static")app.mount('/js', StaticFiles(directory='js'), name='js')# Шаблоны (HTML файлы)templates = Jinja2Templates(directory="templates")@app.get("/", response_class=HTMLResponse)async def read_root(request: Request):    return templates.TemplateResponse("catalog.html", {"request": request})@app.get("/profile", response_class=HTMLResponse)async def read_profile(request: Request):    return templates.TemplateResponse("profile.html", {"request": request})@app.get("/registration", response_class=HTMLResponse)async def read_registration(request: Request):    return templates.TemplateResponse("registration.html", {"request": request})@app.get("/moto/details/{id}", response_class=HTMLResponse)async def moto_details(request: Request):    return templates.TemplateResponse("about-moto.html", {"request": request})app.include_router(moto_router)app.include_router(task_router)app.include_router(auth_router)app.include_router(order_router)